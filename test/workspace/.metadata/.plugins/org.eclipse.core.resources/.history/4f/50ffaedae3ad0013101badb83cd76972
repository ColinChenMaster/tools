package com.test.frameworkcore;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.lang.reflect.Constructor;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.test.*;
import jxl.Cell;
import jxl.Sheet;
import jxl.Workbook;
import jxl.read.biff.BiffException;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.BlockJUnit4ClassRunner;
import org.openqa.selenium.server.SeleniumServer;

import com.thoughtworks.selenium.DefaultSelenium;
import com.thoughtworks.selenium.SeleneseTestBase;
import com.thoughtworks.selenium.Selenium;

public class StartAumomation {
	private Selenium selenium;
	String browserType = "*firefox";

	public static void main(String[] args) {
		try {
			StartRCServer rcServer = new StartRCServer();
			rcServer.runbat();
			StartAumomation start = new StartAumomation();
			start.setUp();
			start.StartAumomation();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	public void setUp() throws Exception {

		selenium = new DefaultSelenium(
				"localhost",
				4444,
				browserType,
				"http://ausyd16as07/BA2Web_wip/BA2Web_wip/BA2Login/tabid/230/language/en-US/Default.aspx/");

		selenium.start();

		selenium.useXpathLibrary("javascript-xpath");
		// selenium.setSpeed("2000");
		selenium.windowFocus();
		selenium.windowMaximize();

	}

	public void StartAumomation() throws Exception {
		String projectPath = "";
		String testCasePath = "";
		String reportPath = "";
		Report report = new Report();
		projectPath = report.globalVariable.getProjectPath();
		testCasePath = projectPath + "\\Testcase";
		reportPath = projectPath + "\\report";
		//Update new report at 08/May/2013
		DateFormat format = new SimpleDateFormat("yyyyMMddHHmmss");
		
		//report = new Report();
		report.setBrowserType(browserType);
		report.setStartDate();		
		report.initReport(
				reportPath,
				reportPath + "\\"
						+ "Report"
						+ format.format(new Date()));		
		File file = new File(testCasePath);
		for (File tempFile : file.listFiles()) {
			/*
			 * report.initReport( "D:\\selenium\\BA2\\report",
			 * "D:\\selenium\\BA2\\report\\" + format.format(new Date()));
			 */
			// Update at 10/Apr/2013
			/*report.initReport(
					reportPath,
					reportPath + "\\"
							+ tempFile.getName().toString().replace(".", "_")
							+ format.format(new Date()));
			 */
			report.initTS(tempFile.getName().toString().replace(".", "_"));
			
			try {
				Workbook workBook = null;

				try {
					// loaded the excel file
					workBook = Workbook.getWorkbook(tempFile);
				} catch (FileNotFoundException e) {
					e.printStackTrace();
				} catch (BiffException e) {
					e.printStackTrace();
				} catch (IOException e) {
					e.printStackTrace();
				}

				// getSheets() return Sheet[]
				// Sheet sheet = workBook.getSheet(0); get the first
				// sheet default from 0
				Sheet start = workBook.getSheet("Start");
				report.setMailTo(start.getCell(0, 0).getContents());

				Sheet sheet = workBook.getSheet("TestCase");

				Cell cell = null;// Single cell instance
				// Start loop get cell value return type: String
				String executeFlag;
				for (int i = 4; i < sheet.getRows(); i++) {

					executeFlag = report.getExecutFlag();
					if (executeFlag.equalsIgnoreCase("Yes")) {
						try {
							TestCaseData testCaseData = new TestCaseData();

							cell = sheet.getCell(1, i);
							testCaseData.setTestCaseName(cell.getContents());

							report.initTC(testCaseData.getTestCaseName());

							String[] actions = new String[sheet.getColumns() - 2];
							for (int j = 2; j < sheet.getColumns(); j++) {
								cell = sheet.getCell(j, i);
								actions[j - 2] = cell.getContents();

							}
							testCaseData.setActions(actions);
							List<Map> values = this.getTestCaseValues(workBook
									.getSheet(testCaseData.getTestCaseName()));
							testCaseData.setValues(values);

							for (Map value : testCaseData.getValues()) {

								for (String action : actions) {
									System.out.println("Action" + action);
									try {
										if (action != null
												&& action.length() > 0) {

											report.initAction(action);
											System.out
													.println("values" + value);
											try {
												Constructor<Action> c = (Constructor<Action>) Class
														.forName(
																"com.test."
																		+ action)
														.getConstructor(
																Selenium.class,
																Map.class,
																Report.class);
												Action gm = c
														.newInstance(selenium,
																value, report);
												gm.doExecute();
											} catch (Exception e) {
												e.printStackTrace();
											}
											report.endAction();
											// report.emailReport(); is still
											// under scripting
										}

									} catch (Throwable e) {
										e.printStackTrace();
									}
								}
							}
						} catch (Throwable e) {
							e.printStackTrace();
						}
						report.endTC();

					} else {
						break;
					}

				}
				workBook.close();

			} catch (Throwable e) {
				e.printStackTrace();
			}
			report.endSecnario();
			// report.emailReport();
		}
		report.endReport();
		tearDown();
	}

	private static List<Map> getTestCaseValues(Sheet sheet) {
		String[] keys = new String[sheet.getColumns()];
		Cell cell = null;
		for (int j = 0; j < sheet.getColumns(); j++) {
			cell = sheet.getCell(j, 0);
			keys[j] = cell.getContents().trim();
		}
		List<Map> maps = new ArrayList<Map>();
		Map values = null;
		for (int i = 1; i < sheet.getRows(); i++) {
			values = new HashMap();
			values.put("sheetRow", "" + i);
			for (int j = 0; j < sheet.getColumns(); j++) {
				cell = sheet.getCell(j, i);
				values.put(keys[j], cell.getContents());
			}
			// System.out.println(values);
			maps.add(values);

			// execute action
		}
		return maps;
	}

	@After
	public void tearDown() throws Exception {
		selenium.stop();
	}

}
